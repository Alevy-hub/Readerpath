@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{

}
@model AddNewBookModel




<div class="row form-group mb-3 d-flex align-items-center justify-content-center align-content-center text-center flex-column">
	<div class="col-md-4">

		<h3>Dodaj nową książkę</h3>

		<form action="/Authorized/AddNewBook" method="post">
			<div class="form-group mb-3 d-flex align-items-center justify-content-center align-content-center text-center flex-column">
				<label class="control-label control-label-text" asp-for="Title"><b>Tytuł</b></label>
				<input class="form-control form-text-input" type="text" asp-for="Title" />
				<span asp-validation-for="Title" class="text-danger"></span>
			</div>
			<div class="form-group mb-3 d-flex align-items-center justify-content-center align-content-center text-center flex-column">
				<label class="control-label control-label-text" asp-for="Author"><b>Autor</b></label>
				<datalist id="authors">
					@foreach(var author in Model.AuthorList)
					{
						<option>@author.Name</option>
					}
				</datalist>
				<input class="form-control form-text-input" autocomplete="on" list="authors" asp-for="Author" name="Author" />
				<span asp-validation-for="Author" class="text-danger"></span>
			</div>
			<div class="form-group mb-3 d-flex align-items-center justify-content-center align-content-center text-center flex-column">
				<label class="control-label control-label-text" asp-for="Genre"><b>Gatunek</b></label>
				<datalist id="genres">
					@foreach(var genre in Model.GenreList)
					{
						<option>@genre.Name</option>
					}
				</datalist>
				<input class="form-control form-text-input" autocomplete="on" list="genres" type="text" asp-for="Genre" />
				<span asp-validation-for="Genre" class="text-danger"></span>
			</div>

			<h3>Wydanie</h3>
			<p>Później będzie można dodać więcej wydań</p>

			<div class="form-group mb-3">
				<label for="Type"><b>Rodzaj</b></label>
				<select class="form-control" id="Type" name="Type">
					<option>Książka papierowa</option>
					<option>Ebook</option>
					<option>Audiobook</option>
				</select>
			</div>

			<div class="form-group mb-3 d-flex align-items-center justify-content-center align-content-center text-center flex-column">
				<label class="control-label control-label-text" for="Publisher"><b>Wydawnictwo</b></label>
				<datalist id="publisher">
					@foreach(var publisher in Model.PublisherList)
					{
						<option>@publisher.Name</option>
					}
				</datalist>
				<input class="form-control form-text-input" autocomplete="on" list="publisher" type="text" id="Publisher" name="Publisher" />
			</div>

			<div id="pages" class="form-group mb-3">
				<label for="Pages"><b>Ilość stron</b></label>
				<input class="form-control" type="text" id="Pages" name="Pages">
			</div>

			<div class="d-flex">
				<div id="durationH" class="form-group mb-3 d-none" style="width: 50%;">
					<label for="DurationH"><b>Godziny</b></label>
					<input class="form-control" type="number" id="DurationH" name="DurationH">
				</div>
				<div id="durationColon" class="d-none d-flex align-items-center mx-2">
					<h3>:</h3>
				</div>
				<div id="durationM" class="form-group mb-3 d-none" style="width: 50%;">
					<label for="DurationM"><b>Minuty</b></label>
					<input class="form-control" type="number" id="DurationM" name="DurationM">
				</div>
			</div>

			<input type="hidden" name="toMyBooks" value="false" id="toMyBooks" />

			<input type="submit" value="Utwórz" class="btn btn-primary" />
			<input type="submit" value="Utwórz i dodaj do moich książek" class="btn btn-primary" name="submitAndAddToMyBooks" />
			<a href="./LoggedIndex" class="btn btn-primary">Anuluj</a>
		</form>
	</div>
</div>


	<script>
		const typeSelect = document.getElementById("Type");
		const pagesDiv = document.getElementById("pages");
		const durationHDiv = document.getElementById("durationH");
		const durationMDiv = document.getElementById("durationM");
		const durationColon = document.getElementById("durationColon");

		typeSelect.addEventListener("change", function () {
			if (typeSelect.value === "Książka papierowa" || typeSelect.value === "Ebook") {
				pagesDiv.classList.remove("d-none");
			} else {
				pagesDiv.classList.add("d-none");
			}

			if (typeSelect.value === "Audiobook") {
				durationHDiv.classList.remove("d-none");
				durationMDiv.classList.remove("d-none");
				durationColon.classList.remove("d-none");
			} else {
				durationHDiv.classList.add("d-none");
				durationMDiv.classList.add("d-none");
				durationColon.classList.add("d-none");
			}
		});
	</script>

	<script>
		const submitAndToMyBooks = document.querySelector('input[name="submitAndAddToMyBooks"]');
			submitAndToMyBooks.addEventListener('click', function () {
		const toMyBooksField = document.getElementById('toMyBooks');
			toMyBooksField.value = "true";
		});
	</script>


@section Scripts {
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}
}
