@model List<AllReadBooksModel>
@{
    int row = 1;
    string ratingString;

    var sortedModel = Model.OrderBy(item => item.FinishDate).ToList();
}

<script src="https://kit.fontawesome.com/af2a249344.js" crossorigin="anonymous"></script>

<div class="text-center">
	<h1>Wszystkie moje książki</h1>
</div>

<div class="align-content-center justify-content-center d-flex mb-2">
    <div class="btn-group w-25">
        <a asp-controller="Authorized" asp-action="AllReadBooks" class="btn btn-primary w-50">Książki</a>
        <a asp-controller="Authorized" asp-action="AllMyPublishers" class="btn btn-outline-primary w-50">Wydawnictwa</a>
    </div>
</div>

<table class="table table-striped">
    <thead>
        <tr>
            <th scope="col">#</th>
            <th scope="col">Tytuł</th>
            <th scope="col">Autor</th>
            <th scope="col">Gatunek</th>
            <th scope="col">Ocena</th>
            <th scope="col">Rozpoczęto</th>
            <th scope="col">Zakończono</th>
            <th scope="col"></th>
        </tr>
    </thead>
    <tbody>
        @foreach(AllReadBooksModel item in sortedModel)
        {
            DateTime startDate = (DateTime)item.StartDate;
            string finishDateString = "";
            if(item.FinishDate != null)
            {
                DateTime finishDate = (DateTime)item.FinishDate;
                finishDateString = finishDate.ToString("dd.MM.yyyy");                
            }

            if(item.Rating == 0)
            {
                ratingString = "Nie oceniono";
            }
            else
            {
                ratingString = item.Rating.ToString();
            }

            <tr>
                <th scope="row">@row</th>
                <td>@item.Title</td>
                <td>@item.Author</td>
                <td>@item.Genre</td>
                <td>@ratingString</td>
                <td>@startDate.ToString("dd.MM.yyyy")</td>
                <td>@finishDateString</td>
                <td class="dropdown">
                    <button class="btn btn-primary dropdown-toggle" type="button" id="actionsDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                        Więcej
                    </button>
                    <ul class="dropdown-menu" aria-labelledby="actionsDropdown">
                        <li><a class="dropdown-item" asp-controller="Authorized" asp-action="BookActionDetails" asp-route-actionId="@item.Id">Szczegóły</a></li>
                        @if (item.Blocked)
                        {
                            <li><a class="dropdown-item disabled" asp-controller="Authorized" asp-action="EditBookAction" asp-route-bookActionId="@item.Id">Edytuj</a></li>
                            <li><button class="dropdown-item disabled" onclick="DeleteAction(@item.Id)">Usuń</button></li>

                        }
                        else
                        {
                            <li><a class="dropdown-item" asp-controller="Authorized" asp-action="EditBookAction" asp-route-bookActionId="@item.Id">Edytuj</a></li>
                            <li><button class="dropdown-item" onclick="DeleteAction(@item.Id)">Usuń</button></li>                            
                        }
                    </ul>
                </td>
            </tr>
            row++;
        }
    </tbody>
</table>

<div id="confirmationModal" class="modal">
    <div class="modal-content">
        <p class="text-center">Czy na pewno chcesz usunąć książkę?</p>

        <div class="d-flex justify-content-center">
            <button class="btn btn-primary mx-2 px-5" onclick="saveSelection()">TAK</button>
            <button class="btn btn-primary mx-2 px-5" onclick="closeConfirmationModal()">NIE</button>
        </div>
    </div>
</div>

<div id="infoModal" class="modal">
    <div class="modal-content">
        <p class="text-center">Nie możesz usunąć książki, która jest najlepszą lub najgorszą książką w miesiącu!</p>

        <div class="d-flex justify-content-center">
            <button class="btn btn-primary mx-2 px-5" onclick="closeInfoModal()">OK</button>
        </div>
    </div>
</div>


<div id="spinnerLoader" class="text-center mb-2" style="display:none">
    <div class="spinner-border text-loader" style="width:10rem; height:10rem;" role="status">
        <span class="sr-only">Loading...</span>
    </div>
</div>

<script>
    let idToDelete;

    function DeleteAction(itemId)
    {
        var confirmationModal = document.getElementById("confirmationModal");
        confirmationModal.style.display = "block";
        idToDelete = itemId;
    }

    function ShowInfoModal()
    {
        var infoModal = document.getElementById("infoModal");
        infoModal.style.display = "block";
    }

    function saveSelection()
    {
        document.getElementById("spinnerLoader").style.display = "flex";
        fetch(`/Authorized/DeleteFromMyBooks/${idToDelete}`, {
            method: 'POST'
        })
        .then(response => {
            if (response.ok) {
                window.location.href = '/Authorized/AllReadBooks';
            } else {
                console.error('Nie udało się usunąć książki.');
                closeConfirmationModal();
                document.getElementById("spinnerLoader").style.display = "none";
                ShowInfoModal();
            }
        })
        .catch(error => {
            console.error('Wystąpił błąd podczas wysyłania żądania:', error);
        });
    }

    function closeConfirmationModal() 
    {
        var confirmationModal = document.getElementById("confirmationModal");
        confirmationModal.style.display = "none";
        idToDelete = null;
    }

    function closeInfoModal() {
        var infoModal = document.getElementById("infoModal");
        infoModal.style.display = "none";
        idToDelete = null;
    }

</script>