
@model TBRDetailsModel

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
<script src="https://kit.fontawesome.com/44679a4f01.js" crossorigin="anonymous"></script>


@if (Model.IsFinished)
{
	<script>startConfetti();</script>

}

<h2 class="text-center">@Model.Title</h2>

@if (Model.Deadline != "01.01.0001")
{
	<h5 class="text-center">Deadline: @Model.Deadline</h5>
}

<div class="align-content-center justify-content-center d-flex mb-2">
	@if (!Model.IsFinished)
	{
		<a asp-controller="Authorized" asp-action="EditTBR" asp-route-TBRId="@Model.TBRId" class="btn btn-primary mx-1">Edytuj</a>
	}
	<button onclick="modalRemoveTBR()" class="btn btn-danger mx-1">Usuń</button>
</div>

@if (!Model.IsFinished)
{
	<div class="d-flex justify-content-center align-items-center">
		<button onclick="showAddTBRBookModal()" class="btn btn-primary btn-circle py-3 my-3">
			<i class="fas fa-plus"></i>
		</button>
	</div>	
}

<style>
	.circle {
		width: 40px;
		height: 40px;
		border-radius: 50%;
		background-color: #1b4c4b;
		display: flex;
		justify-content: center;
		align-items: center;
		cursor: pointer;
	}

	.circle-checked{
		background-color: #c64a16;
	}

	.checkmark::before {
		content: "\2713";
		font-size: 24px;
		color: white;
	}
</style>


<div class="d-flex justify-content-center align-items-center flex-column">
	@foreach (var book in Model.TBRBooks)
	{
		string divId = book.Id.ToString() + "div";
		string titleId = book.Id.ToString() + "title";
		<div id="@divId" class="card mt-1 w-75" style="padding: 0; height: 75px;">
			<div class="card-body d-flex flex-row">
				@if (book.IsRead == true)
				{
					if (Model.IsFinished)
					{
						<div class="circle checkmark circle-checked" id="@book.Id"></div>
					}
					else
					{
						<div onclick="checkCircle(@book.Id)" class="circle checkmark circle-checked" id="@book.Id"></div>						
					}
				}
				else
				{
					<div onclick="checkCircle(@book.Id)" class="circle" id="@book.Id"></div>
				}
				<div class="flex-grow-1 d-flex align-items-center">
					<h5 class="card-title mx-5 text-center" id="@titleId">@book.Title</h5>
				</div>
				<div class="dropdown">
					<button class="btn btn-primary dropdown-toggle" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false">
						Opcje
					</button>
					<ul class="dropdown-menu" aria-labelledby="dropdownMenuButton1">
						<li><button onclick="showEditTBRBookModal('@book.Title', @book.Id)" class="dropdown-item">Edytuj</button></li>
						<li><button onclick="deleteBook(@book.Id, '@divId')" class="dropdown-item">Usuń</button></li>
					</ul>
				</div>
			</div>
		</div>
	}
</div>




<div id="addTBRBook" class="modal">
	<div class="modal-content">
		<h3 class="text-center">Dodaj książkę do TBR</h3>
		<div class="form-group mb-3 d-flex align-items-center justify-content-center align-content-center text-center flex-column">
			<label class="control-label control-label-text" for="count"><b>Tytuł książki</b></label>
			<input class="form-control form-text-input" type="text" for="title" name="title" id="tbrBookTitle" />
		</div>
		<div class="d-flex justify-content-center">
			<button id="addBook" class="btn btn-primary mx-2 px-5" onclick="confirmAddTBRBook()">Dodaj</button>
			<button class="btn btn-primary mx-2 px-5" onclick="closeModal('addTBRBook')">Anuluj</button>
		</div>
	</div>
</div>

<div id="editTBRBook" class="modal">
	<div class="modal-content">
		<h3 class="text-center">Zmień nazwę książki</h3>
		<div class="form-group mb-3 d-flex align-items-center justify-content-center align-content-center text-center flex-column">
			<label class="control-label control-label-text" for="count"><b>Tytuł książki</b></label>
			<input class="form-control form-text-input" type="text" for="title" name="title" id="tbrBookTitleEdit" />
		</div>
		<input type="hidden" id="TBRBookId" value="" />
		<div class="d-flex justify-content-center">
			<button id="addBook" class="btn btn-primary mx-2 px-5" onclick="confirmEditTBRBook()">Zapisz</button>
			<button class="btn btn-primary mx-2 px-5" onclick="closeModal('editTBRBook')">Anuluj</button>
		</div>
	</div>
</div>

<div id="removeTBR" class="modal">
	<div class="modal-content">
		<h3 class="text-center">Czy na pewno chcesz usunąć TBR?</h3>
		<div class="d-flex justify-content-center">
			<button id="addBook" class="btn btn-primary mx-2 px-5" onclick="confirmRemoveTBR()">Tak</button>
			<button class="btn btn-primary mx-2 px-5" onclick="closeModal('removeTBR')">Nie</button>
		</div>
	</div>
</div>

<div id="finishTBR" class="modal">
	<div class="modal-content">
		<i class="fa-regular fa-circle-check fa-bounce fa-2xl text-center py-3 my-3" style="font-size:50px; color:#c64a16;"></i>
		<h3 class="text-center">Brawo! Ukończono TBR!</h3>
		<h4 class="text-center">Czy chcesz go zamknąć?</h4>
		<p class="text-center">Zamknięcie TBR spowoduje, że nie będzie możliwości jego edycji oraz dodawania nowych książek. <br /> <b>Operacja jest nieodwracalna</b></p>
		<div class="d-flex justify-content-center">
			<button id="addBook" class="btn btn-primary mx-2 px-5" onclick="confirmFinishTBR()">Zamykamy!</button>
			<button class="btn btn-primary mx-2 px-5" onclick="closeModal('finishTBR')">Nie!</button>
		</div>
	</div>
</div>

<script>
	function showAddTBRBookModal() {
		var addTBRBookModal = document.getElementById("addTBRBook");
		addTBRBookModal.style.display = "block";
	}

	function showEditTBRBookModal(title, bookid) {
		var addTBRBookModal = document.getElementById("editTBRBook");
		addTBRBookModal.style.display = "block";
		var titleInput = document.getElementById("tbrBookTitleEdit");
		titleInput.value = title;
		var IDInput = document.getElementById("TBRBookId");
		IDInput.value = bookid;
	}

	function confirmAddTBRBook() {
		var title = document.getElementById("tbrBookTitle").value;
		
		var dataToSend = {
			title: title,
			TBRId: '@Model.TBRId'
		}

		fetch(`/Authorized/AddNewTBRBook`, {
			method: 'POST',
			headers: {
				'Content-Type': 'application/json'
			},
			body: JSON.stringify(dataToSend)
		})
			.then(response => {
				if (response.ok) {
					console.log('Zapisano!');
					var tbrId = @Model.TBRId;
					window.location.href = `/TBRDetails/${tbrId}`;
				} else {
					console.error('Nie udało się zapisać');
				}
			})
			.catch(error => {
				console.error('Wystąpił błąd podczas wysyłania żądania:', error);
			});
	}


	document.getElementById("tbrBookTitle")
		.addEventListener("keyup", function (event) {
			event.preventDefault();
			if (event.keyCode === 13) {
				document.getElementById("addBook").click();
			}
		});

	function confirmEditTBRBook(){
		var title = document.getElementById("tbrBookTitleEdit").value;
		var Id = document.getElementById("TBRBookId").value;

		var dataToSend = {
			title: title,
			TBRBookId: Id
		}

		fetch(`/Authorized/EditTBRBook`, {
			method: 'POST',
			headers: {
				'Content-Type': 'application/json'
			},
			body: JSON.stringify(dataToSend)
		})
			.then(response => {
				if (response.ok) {
					console.log('Zapisano!');
					var cardTitle = document.getElementById(Id + 'title');
					cardTitle.innerHTML = title;
					closeModal("editTBRBook");

				} else {
					console.error('Nie udało się zapisać');
				}
			})
			.catch(error => {
				console.error('Wystąpił błąd podczas wysyłania żądania:', error);
			});
	}

	function closeModal(modal) {
		var modal = document.getElementById(modal);
		modal.style.display = "none";
	}

	function checkCircle(sender){
		var circle = document.getElementById(sender);

		fetch(`/Authorized/ChangeTBRStatus`, {
			method: 'POST',
			headers: {
				'Content-Type': 'application/json'
			},
			body: JSON.stringify(sender)
		})
			.then(response => {
				if (response.ok) {
					console.log('Zapisano!');
					console.log('Sprawdzam czy ukończono');
					checkFinished();
				} else {
					console.error('Nie udało się zapisać');
				}
			})
			.catch(error => {
				console.error('Wystąpił błąd podczas wysyłania żądania:', error);
			});

		if(circle.classList.contains("checkmark")){
			circle.classList.remove("checkmark");
			circle.classList.remove("circle-checked");
		}
		else{
			circle.classList.add("checkmark");
			circle.classList.add("circle-checked");		
		}
	}

	function checkFinished(){
		const tbrId = @Model.TBRId;
		fetch(`/Authorized/CheckTBRFinishable?tbrId=${tbrId}`, {
			method: 'GET',
			headers: {
				'Content-Type': 'application/json'
			}
		})
			.then(response => response.json())
			.then(data => {
				if (data === true) {
					console.log('TBR do zamknięcia');
					modalFinishTBR();
				} else {
					console.log('TBR nie jest do zamknięcia');
				}
			})
			.catch(error => {
				console.error('Wystąpił błąd podczas wysyłania żądania:', error);
			});
	}

	function modalFinishTBR() {
		var finishTBRModal = document.getElementById("finishTBR");
		finishTBRModal.style.display = "block";
	}

	function confirmFinishTBR(){
		fetch(`/Authorized/FinishTBR`, {
			method: 'POST',
			headers: {
				'Content-Type': 'application/json'
			},
			body: JSON.stringify(@Model.TBRId)
		})
			.then(response => {
				if (response.ok) {
					console.log('Zapisano!');
					var tbrId = @Model.TBRId;
					window.location.href = `/TBRDetails/${tbrId}`;
				} else {
					console.error('Nie udało się zapisać');
				}
			})
			.catch(error => {
				console.error('Wystąpił błąd podczas wysyłania żądania:', error);
			});
	}

	function deleteBook(sender, divId){
		fetch(`/Authorized/DeleteTBRBook`, {
			method: 'DELETE',
			headers: {
				'Content-Type': 'application/json'
			},
			body: JSON.stringify(sender)
		})
			.then(response => {
				if (response.ok) {
					console.log('Usunięto!');
					var element = document.getElementById(divId);
					element.remove();
				} else {
					console.error('Nie udało się usunąć!');
				}
			})
			.catch(error => {
				console.error('Wystąpił błąd podczas wysyłania żądania:', error);
			});
	}

	function modalRemoveTBR(){
		var editTBRModal = document.getElementById("removeTBR");
		editTBRModal.style.display = "block";
	}

	function confirmRemoveTBR(){
		fetch(`/Authorized/RemoveTBR`, {
			method: 'DELETE',
			headers: {
				'Content-Type': 'application/json'
			},
			body: JSON.stringify(@Model.TBRId)
		})
			.then(response => {
				if (response.ok) {
					console.log('Usunięto!');
					window.location.href = `/Authorized/TBR`;
				} else {
					console.error('Nie udało się usunąć!');
				}
			})
			.catch(error => {
				console.error('Wystąpił błąd podczas wysyłania żądania:', error);
			});
	}

	document.addEventListener("DOMContentLoaded", function () {
		checkFinished();
	});
</script>